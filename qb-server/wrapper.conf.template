# QuickBuild 14 Java Service Wrapper Configuration Template
# Optimized for containerized deployment with Microsoft SQL Server
# Environment variables will be substituted during container startup

#********************************************************************
# Wrapper License Properties (remove for production)
#********************************************************************
# Include file problems can be debugged by removing the first '#'
#  from the following line:
#include.debug

#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
wrapper.java.command=${JAVA_HOME}/bin/java

# Tell the Wrapper to log the full generated Java command line.
wrapper.java.command.loglevel=INFO

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=com.pmease.quickbuild.Bootstrap

# Java Classpath (include all .jar files)
wrapper.java.classpath.1=${QB_HOME}/lib/*.jar
wrapper.java.classpath.2=${QB_HOME}/plugins/*.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=${QB_HOME}/lib

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=TRUE

# Java Additional Parameters
wrapper.java.additional.1=-server
wrapper.java.additional.2=-Dfile.encoding=UTF-8
wrapper.java.additional.3=-Djava.awt.headless=true
wrapper.java.additional.4=-Djava.net.preferIPv4Stack=true
wrapper.java.additional.5=-Dcom.sun.management.jmxremote
wrapper.java.additional.6=-Dquickbuild.home=${QB_HOME}
wrapper.java.additional.7=-Dquickbuild.data=${QB_HOME}/data
wrapper.java.additional.8=-Dserver.port=${QB_SERVER_PORT}

# Memory settings optimized for containerized deployment
wrapper.java.initmemory=512
wrapper.java.maxmemory=2048

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=server

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=${QB_HOME}/logs/wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=10m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=5

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Do not start if the pid file already exists.
wrapper.pidfile.strict=TRUE

# Title to use when running as a console
wrapper.console.title=QuickBuild Server

# Wrapper will start the JVM asynchronously. Your application must call
#  WrapperManager.signalStarting() to tell the Wrapper that it is done
#  initializing and the Wrapper should now start monitoring the application.
wrapper.startup.timeout=300

# Allow 60 seconds for shutdown
wrapper.shutdown.timeout=60

# Use system time for restart delay
wrapper.use_system_time=TRUE

#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=60
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL

# Out Of Memory detection.
wrapper.filter.trigger.1=java.lang.OutOfMemoryError
wrapper.filter.action.1=RESTART
wrapper.filter.message.1=The JVM has run out of memory.

#********************************************************************
# Wrapper Email Notifications. (Requires Professional Edition)
#********************************************************************
# Common Event Email settings.
#wrapper.event.default.email.debug=TRUE
#wrapper.event.default.email.smtp.host=<SMTP_Host>
#wrapper.event.default.email.smtp.port=25
#wrapper.event.default.email.subject=[%WRAPPER_HOSTNAME%:%WRAPPER_NAME%:%WRAPPER_EVENT_NAME%] Event Notification
#wrapper.event.default.email.sender=<Sender email>
#wrapper.event.default.email.recipient=<Recipient email>

# Configure which events will be sent as emails.
#wrapper.event.wrapper_start.email=TRUE
#wrapper.event.jvm_restart.email=TRUE
#wrapper.event.jvm_died.email=TRUE
#wrapper.event.jvm_failed_invocation.email=TRUE

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.name=quickbuild

# Display name of the service
wrapper.displayname=QuickBuild Server

# Description of the service
wrapper.description=QuickBuild Continuous Integration Server

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START, DELAY_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false